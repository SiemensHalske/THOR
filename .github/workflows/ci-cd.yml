name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: thor_user
          POSTGRES_PASSWORD: zoRRo123
          POSTGRES_DB: thor_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Install frontend dependencies
      working-directory: frontend
      run: npm ci

    - name: Run frontend tests
      working-directory: frontend
      run: npm test

    - name: Build frontend
      working-directory: frontend
      run: npm run build

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install backend dependencies
      working-directory: backend
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt

    - name: Run backend tests
      working-directory: backend
      run: |
        source venv/bin/activate
        pytest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Deploy to server
      run: echo "Deploying to server..."
      # Hier kannst du dein Skript oder deinen Befehl hinzufügen, um auf deinen Server zu deployen
      # z.B. rsync, scp oder ein Befehl zum Auslösen eines Deployments auf einer Plattform wie Heroku, AWS, etc.
